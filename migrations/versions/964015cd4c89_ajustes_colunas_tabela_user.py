"""ajustes colunas tabela user

Revision ID: 964015cd4c89
Revises: 9fc8f860812e
Create Date: 2025-08-25 10:48:52.869389

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '964015cd4c89'
down_revision: Union[str, None] = '9fc8f860812e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'cupom_usado', ['id'])
    op.create_unique_constraint(None, 'cupons', ['id'])
    op.create_unique_constraint(None, 'planos', ['id'])
    op.create_unique_constraint(None, 'transacoes', ['id'])
    op.alter_column('users', 'plano',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'inicio_plano',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'fim_plano',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'assinatura_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'assinatura_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'fim_plano',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'inicio_plano',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('users', 'plano',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint(None, 'transacoes', type_='unique')
    op.drop_constraint(None, 'planos', type_='unique')
    op.drop_constraint(None, 'cupons', type_='unique')
    op.drop_constraint(None, 'cupom_usado', type_='unique')
    # ### end Alembic commands ###
