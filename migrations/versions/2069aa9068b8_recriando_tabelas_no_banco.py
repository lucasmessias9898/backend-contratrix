"""recriando tabelas no banco

Revision ID: 2069aa9068b8
Revises: 
Create Date: 2025-08-19 17:34:57.752418

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2069aa9068b8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome', sa.String(), nullable=False),
    sa.Column('tipo', sa.String(), nullable=False),
    sa.Column('campos', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('template', sa.TEXT(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome', sa.String(), nullable=False),
    sa.Column('sobrenome', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('user_photo', sa.String(), nullable=True),
    sa.Column('primeiro_acesso', sa.Boolean(), nullable=False),
    sa.Column('termos', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('plano', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('clientes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tipo_cliente', sa.String(), nullable=False),
    sa.Column('nome_cliente', sa.String(), nullable=True),
    sa.Column('sobrenome_cliente', sa.String(), nullable=True),
    sa.Column('cpf_cliente', sa.String(), nullable=True),
    sa.Column('telefone_cliente', sa.String(), nullable=False),
    sa.Column('email_cliente', sa.String(), nullable=False),
    sa.Column('razao_social_cliente', sa.String(), nullable=True),
    sa.Column('nome_fantasia_cliente', sa.String(), nullable=True),
    sa.Column('cnpj_cliente', sa.String(), nullable=True),
    sa.Column('endereco_cliente', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('status_cliente', sa.String(), nullable=False),
    sa.Column('logo_cliente', sa.String(), nullable=True),
    sa.Column('created_at_cliente', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at_cliente', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('password_reset_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('prestador',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tipo_prestador', sa.String(), nullable=False),
    sa.Column('nome_prestador', sa.String(), nullable=True),
    sa.Column('sobrenome_prestador', sa.String(), nullable=True),
    sa.Column('cpf_prestador', sa.String(), nullable=True),
    sa.Column('telefone_prestador', sa.String(), nullable=False),
    sa.Column('email_prestador', sa.String(), nullable=False),
    sa.Column('razao_social_prestador', sa.String(), nullable=True),
    sa.Column('nome_fantasia_prestador', sa.String(), nullable=True),
    sa.Column('cnpj_prestador', sa.String(), nullable=True),
    sa.Column('endereco_prestador', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('status_prestador', sa.String(), nullable=False),
    sa.Column('logo_prestador', sa.String(), nullable=True),
    sa.Column('created_at_prestador', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at_prestador', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('contratos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome_contrato', sa.String(), nullable=True),
    sa.Column('contrato_text', sa.TEXT(), nullable=True),
    sa.Column('pdf_url', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at_cliente', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at_cliente', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('cliente_id', sa.UUID(), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['cliente_id'], ['clientes.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('contratos')
    op.drop_table('prestador')
    op.drop_table('password_reset_tokens')
    op.drop_table('clientes')
    op.drop_table('users')
    op.drop_table('templates')
    # ### end Alembic commands ###
